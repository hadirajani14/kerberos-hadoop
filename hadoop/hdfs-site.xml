<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->

<!-- Put site-specific property overrides in this file. -->

<configuration>
  <property>
      <name>dfs.replication</name>
      <value>1</value>
  </property>
  <property>
    <name>dfs.namenode.name.dir</name>
    <value>/hadoop/dfsdata/namenode</value>
  </property>
  <property>
    <name>dfs.datanode.data.dir</name>
    <value>/hadoop/dfsdata/datanode</value>
  </property>
  <!-- General HDFS security config -->
  <property> 
    <name>dfs.permissions.enabled</name> 
    <value>true</value> 
  </property>
  <property>
    <name>dfs.datanode.data.dir.perm</name>
    <value>700</value>
    <description>The permissions that should be there on
    dfs.data.dir directories. The datanode will not come up if the
    permissions are different on existing dfs.data.dir directories. If
    the directories don't exist, they will be created with this
    permission.</description>
  </property>
  <property>
    <name>dfs.cluster.administrators</name>
    <value>root</value>
    <description>ACL for who all can view the default servlets in the HDFS</description>
  </property>
  <property>
    <name>dfs.permissions.supergroup</name>
    <value>root</value>
    <description>The name of the group of super-users.</description>
  </property>
  <property>
    <name>dfs.block.access.token.enable</name>
    <value>true</value>
  </property>
  <property>
    <name>dfs.namenode.keytab.file</name>
    <value>/var/keytabs/hdfs.keytab</value>
  </property>
  <property>
    <name>dfs.namenode.kerberos.principal</name>
    <value>hdfs/hadoop.example.com@EXAMPLE.COM</value>
  </property>
  <property>
    <name>dfs.datanode.keytab.file</name>
    <value>/var/keytabs/hdfs.keytab</value>
  </property>
  <property>
    <name>dfs.datanode.kerberos.principal</name>
    <value>hdfs/hadoop.example.com@EXAMPLE.COM</value>
  </property>
  <property>
    <name>dfs.secondary.namenode.keytab.file</name>
    <value>/var/keytabs/hdfs.keytab</value>
  </property>
  <property>
    <name>dfs.journalnode.keytab.file</name>
    <value>/var/keytabs/hdfs.keytab</value>
  </property>
  <property>
    <name>dfs.secondary.namenode.kerberos.principal</name>
    <value>hdfs/hadoop.example.com@EXAMPLE.COM</value>
  </property>
  <property>
    <name>dfs.namenode.kerberos.internal.spnego.principal</name>
    <value>HTTP/hadoop.example.com@EXAMPLE.COM</value>
  </property>
  <property>
    <name>dfs.secondary.namenode.kerberos.internal.spnego.principal</name>
    <value>HTTP/hadoop.example.com@EXAMPLE.COM</value>
  </property>
  <property>
    <name>dfs.journalnode.kerberos.internal.spnego.principal</name>
    <value>HTTP/hadoop.example.com@EXAMPLE.COM</value>
  </property>
  <property>
      <name>dfs.data.transfer.protection</name>
      <value>authentication</value>
  </property>
  <property>
      <name>dfs.encrypt.data.transfer</name>
      <value>false</value>
  </property>
  <property>
      <name>dfs.http.policy</name>
      <value>HTTPS_ONLY</value>
  </property>
  <property>
      <name>dfs.client.https.need-auth</name>
      <value>false</value>
  </property>

  <!-- For testing, we want tokens to expire FAST -->
  <property>
    <name>dfs.namenode.delegation.token.max-lifetime</name>
    <value>180000</value> <!-- 3 minutes -->
  </property>
  <property>
    <name>dfs.namenode.delegation.token.renew-interval</name>
    <value>90000</value> <!-- 30 secs -->
  </property>

  <!-- Web Authentication config -->
  <property>
    <name>dfs.webhdfs.enabled</name>
    <value>true</value>
  </property>
  <property>
    <name>dfs.web.authentication.kerberos.principal</name>
    <value>HTTP/hadoop.example.com@EXAMPLE.COM</value>
  </property>
  <property>
    <name>dfs.web.authentication.kerberos.keytab</name>
    <value>/var/keytabs/hdfs.keytab</value>
  </property>
</configuration>